// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.17.0
// source: restraunt.sql

package db

import (
	"context"
)

const createRestaurant = `-- name: CreateRestaurant :one
INSERT INTO restaurant (
 name, address, phone_number, email
) VALUES (
  $1, $2, $3, $4
)
RETURNING id, name, address, phone_number, email
`

type CreateRestaurantParams struct {
	Name        string `json:"name"`
	Address     string `json:"address"`
	PhoneNumber string `json:"phoneNumber"`
	Email       string `json:"email"`
}

func (q *Queries) CreateRestaurant(ctx context.Context, arg CreateRestaurantParams) (Restaurant, error) {
	row := q.queryRow(ctx, q.createRestaurantStmt, createRestaurant,
		arg.Name,
		arg.Address,
		arg.PhoneNumber,
		arg.Email,
	)
	var i Restaurant
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.PhoneNumber,
		&i.Email,
	)
	return i, err
}

const deleteRestaurant = `-- name: DeleteRestaurant :exec
DELETE FROM restaurant
WHERE id = $1
`

func (q *Queries) DeleteRestaurant(ctx context.Context, id int32) error {
	_, err := q.exec(ctx, q.deleteRestaurantStmt, deleteRestaurant, id)
	return err
}

const getRestaurant = `-- name: GetRestaurant :one
SELECT id, name, address, phone_number, email FROM restaurant
WHERE id = $1
`

func (q *Queries) GetRestaurant(ctx context.Context, id int32) (Restaurant, error) {
	row := q.queryRow(ctx, q.getRestaurantStmt, getRestaurant, id)
	var i Restaurant
	err := row.Scan(
		&i.ID,
		&i.Name,
		&i.Address,
		&i.PhoneNumber,
		&i.Email,
	)
	return i, err
}
